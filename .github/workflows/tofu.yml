name: 'Tofu'

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  tofu:
    name: 'Tofu'
    runs-on: ubuntu-latest
    environment: production
    env:
      ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
      TF_VAR_firebase_key: ${{secrets.FIREBASE_KEY}}
      TF_VAR_db_password: ${{secrets.DB_PASSWORD}}
      TF_VAR_db_username: ${{secrets.DB_USERNAME}}
      TF_VAR_vertex_key: ${{secrets.VERTEX_KEY}}
      TF_VAR_vertex_key_id: ${{secrets.VERTEX_KEY_ID}}
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Tofu
      uses: opentofu/setup-opentofu@v1
        
    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Tofu Format
      run: tofu fmt -check
    
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Tofu Init
      run: tofu init -backend-config=config.azurerm.tfbackend

    # Generates an execution plan for Terraform
    - name: Tofu Plan
      run: tofu plan -input=false

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Tofu Apply
      run: tofu apply -auto-approve -input=false
